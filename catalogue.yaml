- name: creating catalogue
  hosts: catalogue
  become: yes

  tasks:
  - name: disabling old version
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enabling the nodejs
    ansible.builtin.coommand: dnf module enable nodejs:20 -y

  - name: installing node js
    ansible.builtin.package:
     name: nodejs
     state: present

  - name: adding user
    ansible.builtin.user:  
     name: roboshop
     comment: "roboshop system user"
     system: true
     shell: /sbin/nologin
     home: /app 

  - name: deleting a file
    ansible.builtin.file:
     state: absent
     path:  /app


  - name: creating a file
    ansible.builtin.file:
     state: directory
     path:  /app

  - name: Delete catalogue file
    ansible.builtin.file:
      path: /tmp/catalogue.zip
      state: absent

  - name: downloading the files
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
    dest: /tmp/catalogue.zip

  - name: unarchiving the file
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: installing dependencies  
    community.general.npm:
     path: /app

  - name: copying the service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: reloading
    ansible.builtin.systemd_service:
      name: catalogue
      enabled: true
      state: started

  - name: copying mongo repo
    ansible.builtin.copy:
      scr: mongo.repo
      state: /etc/yum.repos.d/mongo.repo

  - name: installing cluient
    ansible.builtin.package:
      name: mongodb-mongosh
      state: present

  - name: connnect to mongodb catalogue
    ansible.builtin.command: mongosh mongodb.daws86s.fun --quiet --eval "db.getMongo().getDBNames().indexOf('catalogue')"
    register: catalogue_output

  - name: print catalogue output
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  





     
    
